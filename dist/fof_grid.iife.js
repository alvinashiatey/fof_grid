var fof_grid=function(l){"use strict";function u(o){let t;if(o.startsWith("#"))t=o.slice(1);else{let e=document.createElement("div");e.style.color=o,t=window.getComputedStyle(e).color,t=t.slice(4,-1).split(",").map(function(s){return s=Number(s).toString(16),s.length===1?"0"+s:s}).join("")}let i=(parseInt(t,16)^16777215).toString(16);return i="#"+"0".repeat(6-i.length)+i,i}class a{x;y;width;height;radius;fillColor;corners=[];fontSize;fontColor;text;constructor(t,i,e,s,h,r){this.x=t,this.y=i,this.width=e,this.height=s,this.radius=h,this.fillColor=r,this.fontSize=.15,this.fontColor=u(r),this.text="hello"}toSvgPath(){return this.groupSvg()}rectSvg(){return`<rect x="${this.x}" y="${this.y}" width="${this.width}" height="${this.height}" rx="${this.radius}" ry="${this.radius}" fill="${this.fillColor}"/>`}textSvg(){return`<text x="${this.x+this.width/2}" y="${this.y+this.height/2}" fill="${this.fontColor}" text-anchor="middle" alignment-baseline="middle" style="font:italic ${this.fontSize}rem sans-serif; ">${this.text}</text>`}connectSvg(){let t="";for(let i of this.corners)t+=i.path;return t}groupSvg(){return`<g>${this.rectSvg()}${this.textSvg()}${this.connectSvg()}</g>`}}class n{x1;y1;x2;y2;radius;bx;by;fillColor="#181818";path="";constructor(t,i,e,s){this.bx=t.x+t.width,this.by=t.y+t.height-e,this.x1=t.x,this.y1=t.y-e,this.x2=i.x,this.y2=i.y+i.height-e,this.radius=e,this.fillColor=s}toSvgPathRight(){return this.path=`M${this.x2} ${this.y2} l${this.radius} ${this.radius} l ${-this.radius} ${this.radius} l ${-this.radius} ${-this.radius} z`,`<path d="${this.path}" fill="${this.fillColor}" stroke="none"/>
`}toSvgPathLeft(){return this.path=`M${this.x1} ${this.y1} l${this.radius} ${this.radius} l ${-this.radius} ${this.radius} l ${-this.radius} ${-this.radius} z`,`<path d="${this.path}" fill="${this.fillColor}" stroke=nonew"/>
`}toSvgPathBottomLeft(){return this.path=`M${this.x1} ${this.by} l${this.radius} ${this.radius} l ${-this.radius} ${this.radius} l ${-this.radius} ${-this.radius} z`,`<path d="${this.path}" fill="${this.fillColor}" stroke="none"/>
`}toSvgPathBottomRight(){return this.path=`M${this.bx} ${this.by} l${this.radius} ${this.radius} l ${-this.radius} ${this.radius} l ${-this.radius} ${-this.radius} z`,`<path d="${this.path}" fill="${this.fillColor}" stroke="none"/>
`}}class d{grid;x;y;squareWidth;squareHeight;radius;color1;color2;columns;rows;constructor(t,i,e,s,h,r,g,c,f){this.x=t,this.y=i,this.squareWidth=e,this.squareHeight=s,this.radius=h,this.color1=r,this.color2=g,this.columns=c,this.rows=f,this.grid=[]}toSvgPath(){let t=this.x,i=this.y,e=this.color1,s=0;for(let h=0;h<this.rows;h++){this.grid[h]=[];for(let r=0;r<this.columns;r++)s++,this.grid[h][r]=this.generateSquarePath(t,i,e),this.grid[h][r].text=s.toString(),t+=this.squareWidth,e=this.alternateColor(e);t=this.x,i+=this.squareHeight}return this.generateGroup()}generateSquarePath(t,i,e){return new a(t,i,this.squareWidth,this.squareHeight,this.radius,e)}hasNeighbor(t,i){let e=!1,s=!1,h=!1,r=!1;return t<this.rows-1&&i>0&&(e=!0),t<this.rows-1&&i<this.columns-1&&(s=!0),t>0&&i>0&&(h=!0),t>0&&i<this.columns-1&&(r=!0),{bottomLeft:e,bottomRight:s,topLeft:h,topRight:r}}generateConnectors(){let t="",i=0;for(let e=0;e<this.rows;e++)for(let s=0;s<this.columns;s++){if(i++,i%2!==0)continue;let h=this.hasNeighbor(e,s);h.bottomLeft&&(t+=new n(this.grid[e][s],this.grid[e+1][s-1],this.radius,this.color2).toSvgPathBottomLeft()),h.bottomRight&&(t+=new n(this.grid[e][s],this.grid[e+1][s+1],this.radius,this.color2).toSvgPathBottomRight())}return{connectors:t,color:this.color2}}generateGroup(){let t={};for(let s=0;s<this.rows;s++)for(let h=0;h<this.columns;h++){let r=this.grid[s][h].fillColor;t[r]||(t[r]=[]),t[r].push(this.grid[s][h])}let i="";const e=Object.keys(t).reverse();for(let s of e){i+=`<g class="${s}">
`;for(let h=0;h<t[s].length;h++)i+=t[s][h].toSvgPath();s===this.generateConnectors().color&&(i+=this.generateConnectors().connectors),i+=`</g>
`}return i}alternateColor(t){return t===this.color1?this.color2:this.color1}render(t=document.body){if(!t)return;const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttribute("xmlns","http://www.w3.org/2000/svg"),i.setAttribute("width","100%"),i.setAttribute("height","100%"),i.setAttribute("viewBox",`0 0 ${this.x+this.squareWidth*this.columns} ${this.y+this.squareHeight*this.rows}`),i.innerHTML=this.toSvgPath(),t.appendChild(i)}}return l.RoundedSquareGrid=d,Object.defineProperties(l,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}}),l}({});
